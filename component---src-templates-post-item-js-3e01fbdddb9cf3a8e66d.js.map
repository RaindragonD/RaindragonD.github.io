{"version":3,"file":"component---src-templates-post-item-js-3e01fbdddb9cf3a8e66d.js","mappings":"2LAmEA,MAtDYA,KACV,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,eAuBtB,OAAEC,GAAWF,EAAKG,KAAKC,aAC7B,OACEC,EAAAA,cAAA,OACEC,MAAO,CACLC,QAAQ,OACRC,cAAcC,EAAAA,EAAAA,IAAO,OAkBvBJ,EAAAA,cAAA,SAAG,MACEA,EAAAA,cAAA,cAASH,EAAOQ,MAAc,IAAER,EAAOS,SAExC,E,oBCmBV,MAxEyBC,IAAsC,IAArC,KAAEZ,EAAI,YAAEa,EAAW,SAAEC,GAAUF,EACvD,MAAMG,EAAOf,EAAKgB,eACZC,EAAYjB,EAAKG,KAAKC,aAAac,OACnC,SAAEC,EAAQ,KAAEC,GAASP,EAE3B,OACER,EAAAA,cAACgB,EAAAA,EAAM,CAACP,SAAUA,EAAUI,MAAOD,GACjCZ,EAAAA,cAACiB,EAAAA,EAAG,CACFJ,MAAOH,EAAKQ,YAAYL,MACxBM,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpDpB,EAAAA,cAAA,eACEA,EAAAA,cAAA,cACEA,EAAAA,cAAA,MACEC,MAAO,CACLoB,WAAWjB,EAAAA,EAAAA,IAAO,GAClBD,aAAc,IAGfO,EAAKQ,YAAYL,OAEpBb,EAAAA,cAAA,KACEC,MAAO,KACFqB,EAAAA,EAAAA,KAAM,IACTpB,QAAQ,QACRC,cAAcC,EAAAA,EAAAA,IAAO,KAGtBM,EAAKQ,YAAYK,OAGtBvB,EAAAA,cAAA,WAASwB,wBAAyB,CAAEC,OAAQf,EAAKgB,QACjD1B,EAAAA,cAAA,MACEC,MAAO,CACLE,cAAcC,EAAAA,EAAAA,IAAO,MAGzBJ,EAAAA,cAAA,cACEA,EAAAA,cAACN,EAAG,QAIRM,EAAAA,cAAA,WACEA,EAAAA,cAAA,MACEC,MAAO,CACLC,QAAQ,OACRyB,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX9B,EAAAA,cAAA,UACGc,GACCd,EAAAA,cAAC+B,EAAAA,KAAI,CAACC,GAAIlB,EAASmB,OAAOC,KAAMC,IAAI,QAAO,KACtCrB,EAASI,YAAYL,QAI9Bb,EAAAA,cAAA,UACGe,GACCf,EAAAA,cAAC+B,EAAAA,KAAI,CAACC,GAAIjB,EAAKkB,OAAOC,KAAMC,IAAI,QAC7BpB,EAAKG,YAAYL,MAAM,SAM3B,C","sources":["webpack://NowhereLog/./src/components/bio.js","webpack://NowhereLog/./src/templates/post-item.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n// import Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  const { author } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n    {\n      //<Image\n      //   fixed={data.avatar.childImageSharp.fixed}\n      //   alt={author.name}\n      //   style={{\n      //     marginRight: rhythm(1 / 2),\n      //     marginBottom: 0,\n      //     minWidth: 50,\n      //     borderRadius: `100%`,\n      //   }}\n      //   imgStyle={{\n      //     borderRadius: `50%`,\n      //   }}\n      // />\n    }\n      <p>\n        By <strong>{author.name}</strong> {author.summary}\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nimport \"katex/dist/katex.min.css\"\n\nconst PostItemTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default PostItemTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"names":["Bio","data","useStaticQuery","author","site","siteMetadata","React","style","display","marginBottom","rhythm","name","summary","_ref","pageContext","location","post","markdownRemark","siteTitle","title","previous","next","Layout","SEO","frontmatter","description","excerpt","marginTop","scale","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}